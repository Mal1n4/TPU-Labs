Цель работы 
Получить навыки создания телеграм-ботов. Разработать телеграм-бота, который выводит фрагменты произведений Жюля Верна.
Задание
•	Положить в папку, которую использует телеграм-бот, не менее 15 файлов, содержащих фрагмент текста произведений автора.
•	Переименовать файлы на название произведений.
•	Подобрать картинку (например, обложку книги) для некоторых произведений.
•	Картинки (в качестве имени файла использовать название произведения) и изображение писателя сохранить во вторую папку, которую использует чат-бот.
•	При активации чат-бота (‘/start’, ‘/run’, ‘/activate’ ‘/petya’) вывести информацию, что чат бот служит для поиска произведений Жюля Верна.
•	Вывести меню «О чат-боте», «Поиск произведения по названию», «Поиск произведения по словам»
•	При активации каждой из этих кнопок удалить это меню из кнопок.
•	Если выбран пункт «О чат-боте»: вывести результат запроса с информацией о разработчике и назначении бота. Вывести снова пункты главного меню.
•	Если выбран пункт «Поиск произведения по названию»: запросить название произведения. Если такое произведение найдено, вывести его картинку (если картинка для произведения есть во второй папке), или изображение писателя (если картинка для произведения отсутствует во второй папке), а также его фрагмент. Вывести снова пункты главного меню.
•	Если выбран пункт «Поиск произведения по словам»: запросить слово, встречающееся в произведении. Вывести названия произведений, где встречается это слово. Вывести снова пункты главного меню.


Ход работы
Для корректной работы телеграм-бота, были написаны и использованы следующие функции, переменные и структуры данных, была добавлена кнопка для вывода списка с правильными названиями произведений, на случай если пользователь не знаком с творчеством писателя:
1.#Функция получения обложки из папки covers_folder_path
def get_cover(file_name)

2.#Функция получения текста из папки texts_folder_path
def get_text(file_name):

3.#Функция для поиска слова в текстах
def titles_with_word(word)

4.#Функция для получения клавиатуры с кнопками приглашения
def get_start_buttons()

5.#Функция обработки сообщений
@bot.message_handler(content_types=['text'])
def get_message(message)

6.#Функция обработки нажатий кнопок
@bot.callback_query_handler(func = lambda call: True)
def callback_worker(call)

#глобальная переменная для отслеживания действий пользователя (какую кнопку нажал: поиск по названию произведения, поиск по слову в произведении)(integer)
title_or_word = -1
#Пути к файлам с обложками и с текстами (строки)
covers_folder_path
texts_folder_path
#токен созданного бота (строка)
TELEGRAM_API_TOKEN
#бот
bot
#строка-путь к файлу с искомой обложкой
image_path
#изображение
image
#строка - путь к файлу с искомым текстом
text_path
#текстовый файл
f
#строка с содержимым открытого текстового файла
text
#список названий текстовых файлов
texts_list
#список названий произведений, в которых встречается переданное пользователем в функцию слово
in_texts_list
#строка для прохода в for по списку texts_list
word
#клавиатура
markup
#кнопки
button_info
button_search_by_title
button_search_by_word
button_list_of_titles
#список с результатами отработанной функции titles_with_word
titles_list
#строка с названиями произведений, в которых найдено переданное пользователем слово, для отправки ботом этого списка
for_send

Код программы
С кодом программы можно ознакомиться по следующей ссылке, код сопровождён комментариями:
https://colab.research.google.com/drive/1FwbDvt9fxJU2qYNbDP5leqU59ZOwgivH?authuser=1

Выводы
В результате выполнения данной лабораторной работы я научилась разрабатывать телеграм-ботов на языке python с помощью библиотеки pytelegrambotapi. Освоила функцию обработки сообщений, создания кастомизированной клавиатуры в телеграм-боте, работу с файлами. Выявила проблему с отображением «й» из названия файлов на гугл диске. Эту проблему можно решить открытием файлов и чтением из них названия произведения, но этот способ займёт больше времени. Также я освоила онлайн среду разработки google colab. Аватар телеграм-бота создан с помощью нейросети Fusion Brain.
